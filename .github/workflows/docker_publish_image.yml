name: Build and Publish Docker Images

on:
  push:
    branches:
      - master
      - develop

    paths-ignore:
      - ".github/workflows/backend_build.yml"
      - ".github/workflows/frontend_build.yml"
      - ".github/workflows/frontend_build_push.yml"
  release:
    types: [released]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-api-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for API Docker
        id: meta_api
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}_api

      - name: Build and push API Docker image
        uses: docker/build-push-action@v3
        with:
          context: backend/
          file: backend/Dockerfile_CPU
          push: true
          tags: ${{ steps.meta_api.outputs.tags }}
          labels: ${{ steps.meta_api.outputs.labels }}

  build-and-push-worker-image:
    needs: build-and-push-api-image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Worker Docker
        id: meta_worker
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}_worker

      - name: Build and push Worker Docker image
        uses: docker/build-push-action@v3
        with:
          context: backend/
          file: backend/Dockerfile
          push: true
          tags: ${{ steps.meta_worker.outputs.tags }}
          labels: ${{ steps.meta_worker.outputs.labels }}
